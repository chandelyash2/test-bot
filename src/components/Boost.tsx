/* eslint-disable @next/next/no-img-element */
"use client";
import React, { useEffect, useState } from "react";
import { Container } from "./Container";
import axios from "axios";
import toast, { Toaster } from "react-hot-toast";

import { useTelegram } from "@/lib/TelegramProvider";
import { Flash } from "./Flash";
import Tick from "../../public/svg/Tick.svg";
import Image from "next/image";
import { energy, multiTap, User } from "@/lib/quest/type";

export const Boost = () => {
  const { user } = useTelegram();
  const [userInfo, setUserInfo] = useState<User>();

  useEffect(() => {
    if (user) {
      fetchUserInfo();
    }
  }, [user]);

  const fetchUserInfo = async () => {
    if (user) {
      const data = await axios.get(
        `${process.env.NEXT_PUBLIC_API_URL}/userInfo`,
        {
          params: {
            userId: user.id,
          },
        }
      );
      if (data.data) {
        setUserInfo(data.data);
      }
    }
  };
  const findPrice = () => {
    if (userInfo) {
      const nextTapLevel = multiTap.find(
        (item) => item.lvl === userInfo.tap + 1
      );
      return nextTapLevel;
    }
  };
  const findEnergy = () => {
    if (userInfo) {
      const nextTapLevel = energy.find(
        (item) => item.lvl === userInfo.boost.lvl + 1
      );
      return nextTapLevel;
    }
  };

  const collectTap = async () => {
    if (userInfo) {
      const response = await axios.post(
        `${process.env.NEXT_PUBLIC_API_URL}/increaseTap`,
        {
          _id: userInfo._id,
          price: findPrice()?.price,
        }
      );
      if (response.data.message) {
        toast.error(response.data.message);
      } else {
        toast.success("Tap Collected");
        setUserInfo(response.data.user);
      }
    }
  };
  const collectEnergy = async () => {
    if (userInfo) {
      const response = await axios.post(
        `${process.env.NEXT_PUBLIC_API_URL}/increaseEnergy`,
        {
          _id: userInfo._id,
          price: findEnergy()?.price,
          energy: findEnergy()?.energy,
        }
      );
      if (response.data.message) {
        toast.error(response.data.message);
      } else {
        toast.success("Energy Collected");
        setUserInfo(response.data.user);
      }
    }
  };
  return (
    <>
      {userInfo ? (
        <Container>
          <div className="relative flex flex-col items-center gap-4 mt-6 pb-[140px]">
            <h2 className="text-2xl font-istok font-bold">Booster</h2>
            <p className="font-manrope w-[80%] text-center">
              Receive rewards and improve your rank for each invited friend
            </p>
            <img
              src="/img/Boost1.png"
              alt="boost"
              className="w-[300px] h-[250px] relative bottom-6"
            />
            <div className="w-full flex flex-col gap-2 relative bottom-8">
              <h4 className="font-semibold font-roboto">Boosters</h4>
              <div className="bg-[#242D32] rounded flex p-2 items-center justify-between">
                <div className="flex gap-2 items-center">
                  <Image src={Tick} alt="tick" />
                  <div className="">
                    <h4 className="font-bold font-roboto">
                      Power energy Lv.{findEnergy()?.lvl}
                    </h4>
                    <span className="text-xs font-manrope flex gap-1 items-center">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="19"
                        height="20"
                        viewBox="0 0 19 20"
                        fill="none"
                      >
                        <g clip-path="url(#clip0_4331_13401)">
                          <path
                            d="M9.5 19.5C14.7467 19.5 19 15.2467 19 10C19 4.75329 14.7467 0.5 9.5 0.5C4.25329 0.5 0 4.75329 0 10C0 15.2467 4.25329 19.5 9.5 19.5Z"
                            fill="#C8C8C8"
                          />
                          <path
                            opacity="0.2"
                            d="M13.2714 1.2793L0.515442 13.0934C0.788228 13.8857 1.1651 14.6382 1.63614 15.3311L15.4163 2.56551C14.7612 2.04409 14.04 1.6116 13.2714 1.2793ZM16.0613 3.13031L2.14825 16.0165C2.34939 16.2622 2.56215 16.4972 2.78654 16.7216L16.7152 3.82055C16.5089 3.57957 16.2906 3.34908 16.0613 3.12994V3.13031ZM17.3857 4.70078L3.6137 17.4568C4.22887 17.9431 4.90197 18.3514 5.61761 18.6721L18.4434 6.79115C18.1788 6.05324 17.8235 5.35107 17.3857 4.70078Z"
                            fill="white"
                          />
                          <path
                            d="M15.1217 15.6238C18.2276 12.5178 18.2276 7.48216 15.1217 4.37624C12.0158 1.27033 6.98008 1.27033 3.87417 4.37624C0.768254 7.48216 0.768254 12.5178 3.87417 15.6238C6.98008 18.7297 12.0158 18.7297 15.1217 15.6238Z"
                            fill="#7A7A7A"
                          />
                          <path
                            d="M14.8737 15.3758C17.8427 12.4068 17.8427 7.59316 14.8737 4.62418C11.9048 1.65519 7.09109 1.65519 4.1221 4.62418C1.15311 7.59316 1.15311 12.4068 4.1221 15.3758C7.09109 18.3448 11.9048 18.3448 14.8737 15.3758Z"
                            fill="#888888"
                          />
                          <path
                            opacity="0.18"
                            d="M11.7113 2.72388L2.07812 11.6472C2.2642 12.4884 2.59264 13.2916 3.04928 14.0222L14.0047 3.87464C13.3112 3.36344 12.5357 2.97428 11.7113 2.72388ZM14.666 4.42237L3.54395 14.7239C3.74112 14.9725 3.95355 15.2086 4.18 15.4309L15.3221 5.11075C15.1179 4.86785 14.8988 4.63794 14.666 4.42237ZM15.9726 6.00954L5.02535 16.1475C5.67639 16.6219 6.39896 16.9895 7.16582 17.2362L16.894 8.22683C16.7071 7.44334 16.396 6.69479 15.9726 6.00954Z"
                            fill="#C8C8C8"
                          />
                          <path
                            d="M15.7344 3.76556C14.0705 2.16319 11.8443 1.27768 9.53438 1.29943C7.22448 1.32117 5.01534 2.24844 3.38192 3.88186C1.7485 5.51528 0.821234 7.72442 0.799487 10.0343C0.77774 12.3442 1.66325 14.5704 3.26562 16.2343C4.92951 17.8367 7.15571 18.7222 9.46562 18.7004C11.7755 18.6787 13.9847 17.7514 15.6181 16.118C17.2515 14.4846 18.1788 12.2755 18.2005 9.96555C18.2223 7.65565 17.3367 5.42945 15.7344 3.76556ZM9.5 18.7065C4.69916 18.7065 0.793396 14.8008 0.793396 9.99994C0.793396 5.1991 4.69916 1.29333 9.5 1.29333C14.3008 1.29333 18.2066 5.1991 18.2066 9.99994C18.2066 14.8008 14.3008 18.7065 9.5 18.7065Z"
                            fill="#F2C341"
                          />
                          <path
                            d="M8.79492 14.5581V13.7316C8.70858 13.7153 8.62372 13.6959 8.54035 13.6734C8.24384 13.5931 7.96041 13.4706 7.69871 13.3097C7.43118 13.1428 7.18665 12.9415 6.97137 12.7111L6.79102 12.5208L7.8323 11.259L8.06127 11.5359C8.23948 11.7594 8.46278 11.9429 8.71662 12.0743C8.95485 12.1913 9.21716 12.2509 9.48256 12.2484C9.85773 12.2484 10.132 12.1819 10.2971 12.051C10.4437 11.9352 10.5149 11.7515 10.5149 11.4895V11.4843C10.5149 11.3288 10.483 11.2108 10.4207 11.1336C10.344 11.0405 10.244 10.9694 10.1309 10.9277C9.93644 10.8569 9.73613 10.8035 9.53228 10.7681H9.52523C9.5053 10.7661 9.48557 10.7625 9.46623 10.7573L9.4332 10.751L9.38051 10.741C9.01668 10.6785 8.65869 10.5858 8.31027 10.4638C7.99484 10.3461 7.72395 10.1328 7.50426 9.82921C7.28457 9.52566 7.17027 9.09705 7.17027 8.56416V8.55933C7.17027 8.05205 7.26676 7.61935 7.45676 7.27349C7.65453 6.91396 7.9648 6.62924 8.33996 6.46302C8.48681 6.39649 8.63964 6.34406 8.79641 6.30642V5.44177H10.3517V6.2656L10.4259 6.28007C10.6653 6.33146 10.8989 6.40731 11.1228 6.50644C11.3571 6.61054 11.5819 6.7347 11.7948 6.87753L12.052 7.04898L11.1217 8.32777L10.8842 8.16709C10.6945 8.03582 10.4887 7.92944 10.2719 7.85054C10.0919 7.78646 9.90253 7.75297 9.71152 7.75146C9.36975 7.75146 9.11777 7.81492 8.96934 7.94035C8.8324 8.05168 8.76598 8.23054 8.76598 8.48214V8.48697C8.76598 8.64617 8.80086 8.76603 8.86951 8.84285C8.95798 8.94063 9.0704 9.01366 9.1957 9.05474C9.42823 9.13088 9.66487 9.19382 9.90449 9.24326L9.94902 9.25439L9.97797 9.2607L10.0292 9.27146L10.0663 9.27962H10.0733C10.4153 9.34982 10.7486 9.45734 11.0671 9.60025C11.376 9.74973 11.6355 9.98464 11.8149 10.2771C12.0119 10.5851 12.1118 10.9974 12.1118 11.5017V11.511C12.1118 12.0057 12.0108 12.4284 11.8115 12.7672C11.6067 13.1156 11.2991 13.3787 10.8964 13.5498C10.7214 13.6226 10.5396 13.6776 10.3535 13.7138V14.5562L8.79492 14.5581Z"
                            fill="#7A7A7A"
                          />
                          <path
                            d="M8.61866 13.3869C8.34957 13.3142 8.09235 13.2031 7.85495 13.057C7.60906 12.9042 7.38445 12.7195 7.18698 12.5078L7.83268 11.7251C8.03715 11.9809 8.29336 12.1906 8.58452 12.3404C8.86373 12.478 9.17132 12.5481 9.48257 12.5452C9.92788 12.5452 10.2609 12.4587 10.4816 12.2855C10.7022 12.1123 10.8123 11.8476 10.8118 11.4913V11.4843C10.8118 11.2584 10.7584 11.0793 10.6515 10.9469C10.5418 10.8132 10.3987 10.7107 10.2366 10.6501C10.0254 10.5726 9.80772 10.5143 9.5861 10.4757C9.57774 10.4728 9.56898 10.4711 9.56013 10.4708C9.55129 10.4707 9.54254 10.4692 9.53415 10.4664L9.48479 10.4567L9.43507 10.4475C9.01449 10.3688 8.67358 10.2807 8.41233 10.1832C8.15108 10.0858 7.92843 9.909 7.74436 9.65294C7.55906 9.39689 7.46641 9.03322 7.46641 8.56193V8.5571C7.46641 8.09843 7.54966 7.71744 7.71616 7.41414C7.88333 7.11042 8.14585 6.8702 8.46317 6.73058C8.79493 6.57818 9.21056 6.50199 9.71005 6.50199C9.92954 6.50188 10.1484 6.52477 10.3632 6.57027C10.5826 6.61731 10.7966 6.68683 11.0018 6.77771C11.2204 6.87491 11.4301 6.99088 11.6286 7.12431L11.0486 7.92179C10.8375 7.77594 10.6085 7.65795 10.3673 7.57074C10.1561 7.49564 9.93379 7.45663 9.70968 7.45533C9.29479 7.45533 8.98369 7.54093 8.77638 7.71212C8.56906 7.88332 8.4654 8.14024 8.4654 8.48289V8.48771C8.4654 8.72348 8.52515 8.90804 8.64464 9.04138C8.76667 9.17689 8.92176 9.27841 9.09477 9.33603C9.33826 9.41586 9.58604 9.48189 9.83696 9.53382L9.87407 9.54347C9.88669 9.54644 9.90079 9.54978 9.91638 9.55275L9.96128 9.5624L10.0062 9.57167C10.3265 9.63686 10.6386 9.7373 10.9369 9.87115C11.1952 9.99663 11.412 10.1937 11.5614 10.4389C11.7282 10.6997 11.8114 11.0548 11.8112 11.5043V11.5136C11.8112 11.9567 11.7246 12.3252 11.5514 12.6191C11.3782 12.913 11.1197 13.1331 10.7758 13.2793C10.4317 13.425 10.0005 13.498 9.4822 13.4982C9.19069 13.4996 8.90029 13.4622 8.61866 13.3869ZM9.09181 5.73865H10.0537V6.81482H9.09181V5.73865ZM9.09181 13.1253H10.0537V14.2612H9.09181V13.1253Z"
                            fill="#C8C8C8"
                          />
                        </g>
                        <defs>
                          <clipPath id="clip0_4331_13401">
                            <rect
                              width="19"
                              height="19"
                              fill="white"
                              transform="translate(0 0.5)"
                            />
                          </clipPath>
                        </defs>
                      </svg>
                      {findEnergy()?.price}
                    </span>
                  </div>
                </div>

                <h2
                  className="text-[#00ACE6] font-semibold text-inter cursor-pointer"
                  onClick={collectEnergy}
                >
                  Buy
                </h2>
              </div>
              <div className="bg-[#242D32] rounded flex p-2 items-center justify-between">
                <div className="flex gap-2 items-center">
                  <Image src={Tick} alt="tick" />
                  <div className="">
                    <h4 className="font-bold font-roboto">
                      Power tap Lv.{findPrice()?.lvl}
                    </h4>
                    <span className="text-xs font-manrope flex gap-1 items-center">
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="19"
                        height="20"
                        viewBox="0 0 19 20"
                        fill="none"
                      >
                        <g clip-path="url(#clip0_4331_13401)">
                          <path
                            d="M9.5 19.5C14.7467 19.5 19 15.2467 19 10C19 4.75329 14.7467 0.5 9.5 0.5C4.25329 0.5 0 4.75329 0 10C0 15.2467 4.25329 19.5 9.5 19.5Z"
                            fill="#C8C8C8"
                          />
                          <path
                            opacity="0.2"
                            d="M13.2714 1.2793L0.515442 13.0934C0.788228 13.8857 1.1651 14.6382 1.63614 15.3311L15.4163 2.56551C14.7612 2.04409 14.04 1.6116 13.2714 1.2793ZM16.0613 3.13031L2.14825 16.0165C2.34939 16.2622 2.56215 16.4972 2.78654 16.7216L16.7152 3.82055C16.5089 3.57957 16.2906 3.34908 16.0613 3.12994V3.13031ZM17.3857 4.70078L3.6137 17.4568C4.22887 17.9431 4.90197 18.3514 5.61761 18.6721L18.4434 6.79115C18.1788 6.05324 17.8235 5.35107 17.3857 4.70078Z"
                            fill="white"
                          />
                          <path
                            d="M15.1217 15.6238C18.2276 12.5178 18.2276 7.48216 15.1217 4.37624C12.0158 1.27033 6.98008 1.27033 3.87417 4.37624C0.768254 7.48216 0.768254 12.5178 3.87417 15.6238C6.98008 18.7297 12.0158 18.7297 15.1217 15.6238Z"
                            fill="#7A7A7A"
                          />
                          <path
                            d="M14.8737 15.3758C17.8427 12.4068 17.8427 7.59316 14.8737 4.62418C11.9048 1.65519 7.09109 1.65519 4.1221 4.62418C1.15311 7.59316 1.15311 12.4068 4.1221 15.3758C7.09109 18.3448 11.9048 18.3448 14.8737 15.3758Z"
                            fill="#888888"
                          />
                          <path
                            opacity="0.18"
                            d="M11.7113 2.72388L2.07812 11.6472C2.2642 12.4884 2.59264 13.2916 3.04928 14.0222L14.0047 3.87464C13.3112 3.36344 12.5357 2.97428 11.7113 2.72388ZM14.666 4.42237L3.54395 14.7239C3.74112 14.9725 3.95355 15.2086 4.18 15.4309L15.3221 5.11075C15.1179 4.86785 14.8988 4.63794 14.666 4.42237ZM15.9726 6.00954L5.02535 16.1475C5.67639 16.6219 6.39896 16.9895 7.16582 17.2362L16.894 8.22683C16.7071 7.44334 16.396 6.69479 15.9726 6.00954Z"
                            fill="#C8C8C8"
                          />
                          <path
                            d="M15.7344 3.76556C14.0705 2.16319 11.8443 1.27768 9.53438 1.29943C7.22448 1.32117 5.01534 2.24844 3.38192 3.88186C1.7485 5.51528 0.821234 7.72442 0.799487 10.0343C0.77774 12.3442 1.66325 14.5704 3.26562 16.2343C4.92951 17.8367 7.15571 18.7222 9.46562 18.7004C11.7755 18.6787 13.9847 17.7514 15.6181 16.118C17.2515 14.4846 18.1788 12.2755 18.2005 9.96555C18.2223 7.65565 17.3367 5.42945 15.7344 3.76556ZM9.5 18.7065C4.69916 18.7065 0.793396 14.8008 0.793396 9.99994C0.793396 5.1991 4.69916 1.29333 9.5 1.29333C14.3008 1.29333 18.2066 5.1991 18.2066 9.99994C18.2066 14.8008 14.3008 18.7065 9.5 18.7065Z"
                            fill="#F2C341"
                          />
                          <path
                            d="M8.79492 14.5581V13.7316C8.70858 13.7153 8.62372 13.6959 8.54035 13.6734C8.24384 13.5931 7.96041 13.4706 7.69871 13.3097C7.43118 13.1428 7.18665 12.9415 6.97137 12.7111L6.79102 12.5208L7.8323 11.259L8.06127 11.5359C8.23948 11.7594 8.46278 11.9429 8.71662 12.0743C8.95485 12.1913 9.21716 12.2509 9.48256 12.2484C9.85773 12.2484 10.132 12.1819 10.2971 12.051C10.4437 11.9352 10.5149 11.7515 10.5149 11.4895V11.4843C10.5149 11.3288 10.483 11.2108 10.4207 11.1336C10.344 11.0405 10.244 10.9694 10.1309 10.9277C9.93644 10.8569 9.73613 10.8035 9.53228 10.7681H9.52523C9.5053 10.7661 9.48557 10.7625 9.46623 10.7573L9.4332 10.751L9.38051 10.741C9.01668 10.6785 8.65869 10.5858 8.31027 10.4638C7.99484 10.3461 7.72395 10.1328 7.50426 9.82921C7.28457 9.52566 7.17027 9.09705 7.17027 8.56416V8.55933C7.17027 8.05205 7.26676 7.61935 7.45676 7.27349C7.65453 6.91396 7.9648 6.62924 8.33996 6.46302C8.48681 6.39649 8.63964 6.34406 8.79641 6.30642V5.44177H10.3517V6.2656L10.4259 6.28007C10.6653 6.33146 10.8989 6.40731 11.1228 6.50644C11.3571 6.61054 11.5819 6.7347 11.7948 6.87753L12.052 7.04898L11.1217 8.32777L10.8842 8.16709C10.6945 8.03582 10.4887 7.92944 10.2719 7.85054C10.0919 7.78646 9.90253 7.75297 9.71152 7.75146C9.36975 7.75146 9.11777 7.81492 8.96934 7.94035C8.8324 8.05168 8.76598 8.23054 8.76598 8.48214V8.48697C8.76598 8.64617 8.80086 8.76603 8.86951 8.84285C8.95798 8.94063 9.0704 9.01366 9.1957 9.05474C9.42823 9.13088 9.66487 9.19382 9.90449 9.24326L9.94902 9.25439L9.97797 9.2607L10.0292 9.27146L10.0663 9.27962H10.0733C10.4153 9.34982 10.7486 9.45734 11.0671 9.60025C11.376 9.74973 11.6355 9.98464 11.8149 10.2771C12.0119 10.5851 12.1118 10.9974 12.1118 11.5017V11.511C12.1118 12.0057 12.0108 12.4284 11.8115 12.7672C11.6067 13.1156 11.2991 13.3787 10.8964 13.5498C10.7214 13.6226 10.5396 13.6776 10.3535 13.7138V14.5562L8.79492 14.5581Z"
                            fill="#7A7A7A"
                          />
                          <path
                            d="M8.61866 13.3869C8.34957 13.3142 8.09235 13.2031 7.85495 13.057C7.60906 12.9042 7.38445 12.7195 7.18698 12.5078L7.83268 11.7251C8.03715 11.9809 8.29336 12.1906 8.58452 12.3404C8.86373 12.478 9.17132 12.5481 9.48257 12.5452C9.92788 12.5452 10.2609 12.4587 10.4816 12.2855C10.7022 12.1123 10.8123 11.8476 10.8118 11.4913V11.4843C10.8118 11.2584 10.7584 11.0793 10.6515 10.9469C10.5418 10.8132 10.3987 10.7107 10.2366 10.6501C10.0254 10.5726 9.80772 10.5143 9.5861 10.4757C9.57774 10.4728 9.56898 10.4711 9.56013 10.4708C9.55129 10.4707 9.54254 10.4692 9.53415 10.4664L9.48479 10.4567L9.43507 10.4475C9.01449 10.3688 8.67358 10.2807 8.41233 10.1832C8.15108 10.0858 7.92843 9.909 7.74436 9.65294C7.55906 9.39689 7.46641 9.03322 7.46641 8.56193V8.5571C7.46641 8.09843 7.54966 7.71744 7.71616 7.41414C7.88333 7.11042 8.14585 6.8702 8.46317 6.73058C8.79493 6.57818 9.21056 6.50199 9.71005 6.50199C9.92954 6.50188 10.1484 6.52477 10.3632 6.57027C10.5826 6.61731 10.7966 6.68683 11.0018 6.77771C11.2204 6.87491 11.4301 6.99088 11.6286 7.12431L11.0486 7.92179C10.8375 7.77594 10.6085 7.65795 10.3673 7.57074C10.1561 7.49564 9.93379 7.45663 9.70968 7.45533C9.29479 7.45533 8.98369 7.54093 8.77638 7.71212C8.56906 7.88332 8.4654 8.14024 8.4654 8.48289V8.48771C8.4654 8.72348 8.52515 8.90804 8.64464 9.04138C8.76667 9.17689 8.92176 9.27841 9.09477 9.33603C9.33826 9.41586 9.58604 9.48189 9.83696 9.53382L9.87407 9.54347C9.88669 9.54644 9.90079 9.54978 9.91638 9.55275L9.96128 9.5624L10.0062 9.57167C10.3265 9.63686 10.6386 9.7373 10.9369 9.87115C11.1952 9.99663 11.412 10.1937 11.5614 10.4389C11.7282 10.6997 11.8114 11.0548 11.8112 11.5043V11.5136C11.8112 11.9567 11.7246 12.3252 11.5514 12.6191C11.3782 12.913 11.1197 13.1331 10.7758 13.2793C10.4317 13.425 10.0005 13.498 9.4822 13.4982C9.19069 13.4996 8.90029 13.4622 8.61866 13.3869ZM9.09181 5.73865H10.0537V6.81482H9.09181V5.73865ZM9.09181 13.1253H10.0537V14.2612H9.09181V13.1253Z"
                            fill="#C8C8C8"
                          />
                        </g>
                        <defs>
                          <clipPath id="clip0_4331_13401">
                            <rect
                              width="19"
                              height="19"
                              fill="white"
                              transform="translate(0 0.5)"
                            />
                          </clipPath>
                        </defs>
                      </svg>
                      {findPrice()?.price}
                    </span>
                  </div>
                </div>

                <h2
                  className="text-[#00ACE6] font-semibold text-inter cursor-pointer"
                  onClick={collectTap}
                >
                  Buy
                </h2>
              </div>
            </div>
          </div>
          <Toaster />
        </Container>
      ) : (
        <Flash />
      )}
    </>
  );
};
